<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on xpblog</title>
    <link>https://xp329486175.github.io/tags/mysql/</link>
    <description>Recent content in Mysql on xpblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sun, 23 Jun 2019 11:42:48 +0800</lastBuildDate>
    
	<atom:link href="https://xp329486175.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>redo log和binlog</title>
      <link>https://xp329486175.github.io/blog/2019-06/redo-log%E5%92%8Cbinlog/</link>
      <pubDate>Sun, 23 Jun 2019 11:42:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/redo-log%E5%92%8Cbinlog/</guid>
      <description>序 前面我们介绍了一条查询sql的执行过程《一条SQL查询语句是如何执行的》。 那如果是一条更新sql呢？会是一个怎样的执行过程？ 其实一条更新语句与查询语句执行过程基本一样。经过连接器、分析器、优化器、执行器等功能模块，最后到达存储引擎。 但是它还是有差别的。差别就在redo log和binlog。 redo log和binlog 前面我们说过：mysql可以看成两块：server层和存储引擎层。 而作为mysql中最</description>
    </item>
    
    <item>
      <title>一条SQL查询语句是如何执行的</title>
      <link>https://xp329486175.github.io/blog/2019-06/%E4%B8%80%E6%9D%A1sql%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84/</link>
      <pubDate>Mon, 17 Jun 2019 12:08:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/%E4%B8%80%E6%9D%A1sql%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84/</guid>
      <description>准备工作 首先我们建一张test表，里面有id、k、v这三个字段，添加三条测试数据。 id k v 1 k1 v1 2 k2 v2 3 k3 v3 我们写一个最简单的sql： SELECT * FROM test WHERE id = 1 那么在mysql的架构中，这条sql是怎么执行的呢？ Mysql逻辑架构 废话不多说，我们直接上图： 上面是一个mysql基本逻辑架构示意图。我们可以清楚的看到sql在mysql各个功能模块的执行过程。 要想执行一条查询sql。首先要经过连接器，将mysql客</description>
    </item>
    
    <item>
      <title>sql小技巧(1) order by field</title>
      <link>https://xp329486175.github.io/blog/2019-06/sql%E5%B0%8F%E6%8A%80%E5%B7%A71-order-by-field/</link>
      <pubDate>Tue, 11 Jun 2019 15:28:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/sql%E5%B0%8F%E6%8A%80%E5%B7%A71-order-by-field/</guid>
      <description>序 在工作中，遇到了一个需求，需要通过where in $condition查询， 然后查询出来的结果又需要按照$condition来排序。 此时就可以用到order by field来进行排序了。 例子 这里我以id为条件做举例。 当不排序的时候 SELECT `id`, `name` FROM rb_robot WHERE id IN ( 51, 50, 49 ) 此时返回的结果： id name 49 三号 50 四号 51 五号 当排序的时候 SELECT `id`, `name` FROM rb_robot WHERE id IN ( 51, 50, 49 ) ORDER BY FIELD( id, 51, 50, 49 ) 此时返回的结果： id name 51 五号 50 四号 49 三号</description>
    </item>
    
  </channel>
</rss>