<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络协议 on xpblog</title>
    <link>https://xp329486175.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</link>
    <description>Recent content in 网络协议 on xpblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Mon, 29 Jul 2019 23:19:48 +0800</lastBuildDate>
    
	<atom:link href="https://xp329486175.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>http五大特点总结</title>
      <link>https://xp329486175.github.io/blog/2019-07/http%E4%BA%94%E5%A4%A7%E7%89%B9%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 29 Jul 2019 23:19:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-07/http%E4%BA%94%E5%A4%A7%E7%89%B9%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>灵活可扩展 HTTP是一个&amp;rdquo;灵活可扩展&amp;rdquo;的传输协议。 主要体现在：http可以任意添加头字段实现任意功能。 HTTP协议最初诞生的时候就比较简单，本着开放的精神只规定了报文的基本格式，比如用空格分隔单词，用换行分隔字段， “header+body”等，报文里的各个组成部分都没有做严格的语法语义限制，可以由开发者任意定制。 所以，HTTP 协议就随着互联网的发展一同成长起来了。在这个过程</description>
    </item>
    
    <item>
      <title>http请求方法梳理</title>
      <link>https://xp329486175.github.io/blog/2019-06/http%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/</link>
      <pubDate>Wed, 19 Jun 2019 17:19:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/http%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E6%A2%B3%E7%90%86/</guid>
      <description>序 我们都知道HTTP的报文结构，它是由header+body构成，请求头里有请求方法和请求目标，响应头里有状态码和原因短语， 今天要说的就是请求头里的请求方法。 标准请求方法 HTTP协议里的&amp;rdquo;请求方法&amp;rdquo;是什么呢？ 请求方法就是客户端发出一个&amp;rdquo;动作指令&amp;rdquo;，要求服务器端对URI定位的资源执行这个动作。 目前HTTP/1.1规定了八种方法（单词必须大写）： GET：</description>
    </item>
    
  </channel>
</rss>