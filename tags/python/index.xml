<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on xpblog</title>
    <link>https://xp329486175.github.io/tags/python/</link>
    <description>Recent content in python on xpblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Mon, 08 Jul 2019 18:21:48 +0800</lastBuildDate>
    
	<atom:link href="https://xp329486175.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python基础梳理</title>
      <link>https://xp329486175.github.io/blog/2019-07/python%E5%9F%BA%E7%A1%80%E6%A2%B3%E7%90%86/</link>
      <pubDate>Mon, 08 Jul 2019 18:21:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-07/python%E5%9F%BA%E7%A1%80%E6%A2%B3%E7%90%86/</guid>
      <description>python简介 定位 python的定位：优雅、明确、简单。 python解释器 Cpython：C语言开发。通常在命令行下运行python就是启动CPython解释器，一般是以&amp;gt;&amp;gt;&amp;gt;作提示符。 IPython：基于CPython之上的一个交互式解释器，只是在交互方式上有所增强。Python用In [序号]:作为提示符。 PyPy：P采用JIT技术，对Python代码进行动态编译（注意不是解</description>
    </item>
    
    <item>
      <title>python关键字</title>
      <link>https://xp329486175.github.io/blog/2019-07/python%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Sun, 07 Jul 2019 18:11:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-07/python%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>关键字获取 Python自带了一个keyword模块，用于检测关键字。 &amp;gt;&amp;gt;&amp;gt; import keyword &amp;gt;&amp;gt;&amp;gt; print(keyword.kwlist) [&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;async&#39;, &#39;await&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;] 关键字判断 关键字判断也是用的keyword模块。 &amp;gt;&amp;gt;&amp;gt; keyword.iskeyword(&#39;class&#39;) True &amp;gt;&amp;gt;&amp;gt; keyword.iskeyword(&#39;hello&#39;) False 关键字详解 and、or、not 分别对应逻辑判断 【与】、【或】、【非】。 with、as with、as单独没有实际意思，常与with组合使用，with...as。例如我生成一个txt文件，在里面写</description>
    </item>
    
    <item>
      <title>mac下python2和python3同时安装pip2和pip3</title>
      <link>https://xp329486175.github.io/blog/2019-07/mac%E4%B8%8Bpython2%E5%92%8Cpython3%E5%90%8C%E6%97%B6%E5%AE%89%E8%A3%85pip2%E5%92%8Cpip3/</link>
      <pubDate>Mon, 01 Jul 2019 20:21:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-07/mac%E4%B8%8Bpython2%E5%92%8Cpython3%E5%90%8C%E6%97%B6%E5%AE%89%E8%A3%85pip2%E5%92%8Cpip3/</guid>
      <description>序 今天使用pip安装gearman时，遇到一个坑，记录一下。 安装时，提示报错，然后发现时python版本问题。pip对应的python版本是python3.7。 ➜ member_avatar git:(master) pip -V pip 19.1.1 from /usr/local/lib/python3.7/site-packages/pip (python 3.7) 因此，我需要将我的python2，也安装一个对应的pip。然后将pip3指向python3。 安装pip2和pip3 由于mac虽然自带了python，但是却没有自带pip。所以我们需要用mac里面python自带easy</description>
    </item>
    
  </channel>
</rss>