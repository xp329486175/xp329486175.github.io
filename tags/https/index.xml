<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>https on xpblog</title>
    <link>https://xp329486175.github.io/tags/https/</link>
    <description>Recent content in https on xpblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sat, 22 Jun 2019 23:00:48 +0800</lastBuildDate>
    
	<atom:link href="https://xp329486175.github.io/tags/https/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>https工作原理与配置</title>
      <link>https://xp329486175.github.io/blog/2019-06/https%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 22 Jun 2019 23:00:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/https%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>https配置 在前面的一篇博客《使用nginx搭建一个简单具有反向代理功能的网站》中我们已经搭建了一个具有反向代理的网站。那如果我们要接着配置https应该怎么做呢？ 如果是自己的web网站，我们可以使用这样一个自动化脚本进行配置：Let’s Encrypt。 具体命令： #yum install python2-certbot-nginx #cerbot —nginx—nginx-server-root=/Users/xiepeng/xp/nginx/conf -d a.test.pub 这两行命令实际的</description>
    </item>
    
  </channel>
</rss>