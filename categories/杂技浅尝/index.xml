<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杂技浅尝 on xpblog</title>
    <link>https://xp329486175.github.io/categories/%E6%9D%82%E6%8A%80%E6%B5%85%E5%B0%9D/</link>
    <description>Recent content in 杂技浅尝 on xpblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Tue, 25 Jun 2019 23:00:48 +0800</lastBuildDate>
    
	<atom:link href="https://xp329486175.github.io/categories/%E6%9D%82%E6%8A%80%E6%B5%85%E5%B0%9D/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>程序员练级之路</title>
      <link>https://xp329486175.github.io/blog/2019-06/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%BB%83%E7%BA%A7%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Tue, 25 Jun 2019 23:00:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%BB%83%E7%BA%A7%E4%B9%8B%E8%B7%AF/</guid>
      <description>序 从博客搭建到今天，正好是两周了，这是第15篇blog。今天放松下不写纯技术类博文了，聊聊程序员相关话题：级别和晋升。 在程序员的职业生涯之中，都会经历一个修炼成长、打怪升级的过程。虽然我工作时间比起那些十年二十年的资深大佬来说还太少， 但也毕业四年了。这里就根据看到的一些文章和自己这四年职业生涯，还是写点感想吧。当然每个人都有自己的看法，这只是我个人或者说是个人认同的观点。 级别要分为两个方面：个人能</description>
    </item>
    
    <item>
      <title>字符编码基础</title>
      <link>https://xp329486175.github.io/blog/2019-06/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 24 Jun 2019 21:36:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E5%9F%BA%E7%A1%80/</guid>
      <description>字符编码 我们都知道，字符串是一种数据类型。但是字符串和其他数据类型相比，比较特殊都地方就是有编码问题。 因为计算机只能处理数字。如果要处理文本，就要先把其他类型的文本转换成数字才能处理。最早的时候计算机设计为8个比特（bit）作为一个字节（Byte）， 所以一个字节能表示的最大整数就是255（二进制11111111=十进制255）。 如果需要表示更大的整数，就需要更多的字节。如果两个字节可以表示的最大整</description>
    </item>
    
    <item>
      <title>OAuth2协议之几种典型的OAuth Flow</title>
      <link>https://xp329486175.github.io/blog/2019-06/oauth2%E5%8D%8F%E8%AE%AE%E4%B9%8B%E5%87%A0%E7%A7%8D%E5%85%B8%E5%9E%8B%E7%9A%84oauth-flow/</link>
      <pubDate>Sun, 16 Jun 2019 12:13:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/oauth2%E5%8D%8F%E8%AE%AE%E4%B9%8B%E5%87%A0%E7%A7%8D%E5%85%B8%E5%9E%8B%E7%9A%84oauth-flow/</guid>
      <description>OAuth2运行流程 从上一篇文章我们知道了，OAuth2是什么，它的本质就是如何获取Token，如何使用Token。我们用一张图来总结一下OAuth2运行流程： A) 用户打开客户端以后，客户端要求用户给予授权。 B) 用户同意给予客户端授权。 C) 客户端使用上一步获得的授权，向认证服务器申请令牌。 D) 认证服务器对客户端进行认证以后，确认无误，同意发放令牌。 E) 客户端使用令牌，向资源服务器申请获取资源。 F) 资源服务器确</description>
    </item>
    
    <item>
      <title>OAuth2协议之白话OAuth2</title>
      <link>https://xp329486175.github.io/blog/2019-06/oauth2%E5%8D%8F%E8%AE%AE%E4%B9%8B%E7%99%BD%E8%AF%9Doauth2/</link>
      <pubDate>Sat, 15 Jun 2019 16:52:48 +0800</pubDate>
      
      <guid>https://xp329486175.github.io/blog/2019-06/oauth2%E5%8D%8F%E8%AE%AE%E4%B9%8B%E7%99%BD%E8%AF%9Doauth2/</guid>
      <description>OAuth2协议是什么？ OAuth2通常也叫OAuth2.0。在我们日常生活中，我们常常会用微信或者QQ等账号去注册或者登陆其他应用。比如：用微信玩王者荣耀等。 这类在应用程序上，通过第三方账号授权，提供有限的用户数据的行为。就是OAuth2协议的一种最常见的使用场景。 官方术语 OAuth2是开放授权的一个标准，旨在让用户允许第三方应用去访问改用户在某服务器中的特定私有资源， 而可以不提供其在某服务器的</description>
    </item>
    
  </channel>
</rss>